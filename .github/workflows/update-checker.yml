#
# Copyright (c) 2019-2021 smallprogram
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/smallprogram/OpenWrtAction
# File: .github/workflows/Update_Checker.yml
# Description: Source code update checker
# https://github.com/Lenyu2020/Actions-OpenWrt-x86/blob/main/.github/workflows/update-checker.yml

name: Update_Checker

env:
  REPO_URL_Lede: https://github.com/coolsnowwolf/lede
  REPO_BRANCH_Lede: master
  REPO_PATH_Lede : "lede"
  
  REPO_URL_Smpackage: https://github.com/kenzok8/small-package
  REPO_BRANCH_Smpackage: main
  REPO_PATH_Smpackage : "smpackage"

  REPO_URL_PassWall: https://github.com/xiaorouji/openwrt-passwall
  REPO_BRANCH_PassWall: main
  REPO_PATH_PassWall : "passwall"


on:
  workflow_dispatch:
  schedule:
    - cron: 0 8 * * 1,3,5

jobs:
  check:
    runs-on: ubuntu-latest

    steps:

    - name: Get Commit Hash
      id: getHash
      run: |
      
        git clone --depth 1 $REPO_URL_Lede -b $REPO_BRANCH_Lede $REPO_PATH_Lede
        cd $REPO_PATH_Lede
        echo "commitHash_Lede=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
        cd

        git clone --depth 1 $REPO_URL_Smpackage -b $REPO_BRANCH_Smpackage $REPO_PATH_Smpackage
        cd $REPO_PATH_Smpackage
        echo "commitHash_Smpackage=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
        cd

        git clone --depth 1 $REPO_URL_PassWall -b $REPO_BRANCH_PassWall $REPO_PATH_PassWall
        cd $REPO_PATH_PassWall
        echo "commitHash_PassWall=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
        cd
        
    - name: Show Commit Head and Combination Heads
      id: combHeader
      run: |
        echo "commitHash_Lede: ${{ steps.getHash.outputs.commitHash_Lede }}"
        echo "commitHash_Smpackage: ${{ steps.getHash.outputs.commitHash_Smpackage }}"
        echo "commitHash_PassWall: ${{ steps.getHash.outputs.commitHash_PassWall }}"
        echo "commitHash_All=\
          ${{steps.getHash.outputs.commitHash_Lede}}\
          ${{steps.getHash.outputs.commitHash_Smpackage}}\
          ${{steps.getHash.outputs.commitHash_PassWall}}" >> $GITHUB_OUTPUT

    - name: Compare Commit Hash
      id: cacheHash
      uses: actions/cache@v3.4.3
      with:
        path: .commitHash_All
        key: HEAD-${{ steps.combHeader.outputs.commitHash_All }}
   

    - name: Save New Commit Hash
      if: steps.cacheHash.outputs.cache-hit != 'true'
      run: |
        echo ${{ steps.getHash.outputs.commitHash_Lede }} | tee .commitHash_Lede
        echo ${{ steps.getHash.outputs.commitHash_Smpackage }} | tee .commitHash_Smpackage
        echo ${{ steps.getHash.outputs.commitHash_PassWall }} | tee .commitHash_PassWall
        echo ${{ steps.combHeader.outputs.commitHash_All }} | tee .commitHash_All   
        
    - name: Trigger build
      if: steps.cacheHash.outputs.cache-hit != 'true'
      uses: peter-evans/repository-dispatch@v1
      with:
        token: ${{ secrets.ACTIONS_TRIGGER_PAT }}
        event-type: Source Code Update

    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 1
